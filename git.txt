git init ---  "initialize the git repository"

git add anyfile.txt --- # stage a specific file

git add . --- "track changes for current and upcoming commits for all files"

git reset . --- "put the changes back to working section instead of the staging section"

git commit -m 'message of the commit' --- "snapshot of the changes and captures them since last commit"

git commit -m 'message of the commit' --amend "Update previous commit instead of creating new one"

git push origin main --- "Upload the branch "main" to the remote repository named "origin". "

git push -u origin main --- "send your local files to remote repository by associating local branch with the remote branch"
                        --- "where origin means the default name for the remote repository created and main as the name of the branch."

The '-u' {--set-upstream} flag is setting up a tracking relationship between local "main" branch and the remote "main" branch on "origin".
This allows you to simply use 'git pull' or 'git push' without specifiying the remote and branch each time, as Git remembers the remote repo & the upstream branch.

git branch --- "Shows all the branches available"

git branch "branchName" --- "Creates a branch"

git checkout "branchName" --- "Switch branches"

git switch "branchName" 

git checkout -b "branchName" --- "Combine the creating and switching branches"

git pull --- " fetches changes from the remote repository and merges them into your current branch"

git push --- "pushes your local commits to the remote repository"

git merge "branchName" --- "Merges changes from one branch into the current branch"

git status --- "shows the status of working directory"

git log --- "shows the user details along with the branch and commits worked upon"


**Viewing Previous Commits** 

git checkout <commit_hash|branch_name> --- "view a previous commit" 

**Restoring Previous Commits**

git checkout <hash|branch> <file|folder> or . --- "Restores the content of files back to a previous commit"

**Other features of Git**

git config --global alias.shortcut <git command> --- "Creates an alias or shortcut as you like for the git commands"
git config --global alias.s "status" --- "When you type `git s = git status `

Create a file called `.gitignore` - Tell git which files to ignore / should not track in your local repository

**Uploading Code to GitHub**

git remote add <remote_name> <url> --- "Link a local repository to a remote repository and give a name for this link"
git remote add origin https://github.com/Druky1/git_basics.git 

git remote -v --- "List all the remote repositories that are linked

git remote remove <remote_name> --- "Removes a link to a remote repository"
git remote remove origin  --- "Removes a link to the remote repository named origin"

git config --global credentials.username <username> --- "Configure your GitHub username so you can get access to your GitHub Repository"
